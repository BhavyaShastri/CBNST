#include <stdio.h>

float f1(float y, float z){
    return ((44-y-2*z)/10);
}

float f2(float x, float z){
    return ((51-2*x-z)/10);
}

float f3(float x, float y){
    return ((61-x-2*y)/10);
}

void cal(float x, float y, float z, float allowed_err, int it){
    float x1 = f1(y,z);
    float y1 = f2(x1,z);
    float z1 = f3(x1,y1);

    float e1 = x1-x, e2 = y1 - y, e3 = z1 - z;
    if(e1 <= allowed_err && e2 <= allowed_err && e3 <= allowed_err){
        printf("\nx = %f, y = %f, z = %f\n",x1,y1,z1);
        return;
    }printf("Iteration%d : x = %f, y = %f, z = %f\n",it,x1,y1,z1);
    it++;
    cal(x1,y1,z1,allowed_err, it);
}

int main(){
    float x = 0, y = 0, z = 0, allowed_err;
    printf("Enter the allowed error : ");
    scanf("%f",&allowed_err);
    cal(x,y,z,allowed_err,1);

    return 0;
}





//Method 2

#include<stdio.h>
#include<stdlib.h>
#include<math.h>

// step 1 : arrange the equation in the diagonal domination form 

# define f1(x,y,z) (17-y+2*z)/20
# define f2(x,y,z) (-18-3*x+z)/20
# define f3(x,y,z) (25-2*x+3*y)/20

    int step = 1;
    void calFunction(float x , float y , float z , float error){
    float x1 = f1(x , y , z);
    float y1 = f2(x1 , y , z);
    float z1 = f3(x1, y1 , z);

    printf("%d\t\t%0.4f\t%0.4f\t%0.4f\n" , step , x1, y1 , z1);

    float e1 = fabs(x - x1);
    float e2 = fabs(y - y1);
    float e3 = fabs(z - z1);

    step++;

    if(e1 <= error && e2 <= error && e3 <= error ){
        printf("The value of x =  %0.4f , y = %0.4f and z = %0.4f", x1 , y1 , z1);
        return;
    }

    calFunction(x1, y1, z1 , error);    
}



int main(){

    float error , x = 0 , y = 0 , z = 0;
    printf("Enter the allowed error = ");
    scanf("%f" , &error);

    printf("iteration\tx\ty\tz\n");
    calFunction(x, y , z , error);
}
